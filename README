eXo Social Client Java Library

http://exoplatform.org/company/en/platform/exo-extended-services/exo-social


1. How to build

* Dependencies:
  + json_simple-1.1 (compiled): http://code.google.com/p/json-simple/

  + junit-4.8.2 (test)


* Use maven, works on maven-3.x.
* Use json-simple library which is not on maven repository, need to install this artifact on local repository.

  + cd to lib, run this maven command:
  mvn install:install-file -Dfile=json_simple-1.1.jar -DgroupId=com.googlecode -DartifactId=json_simple -Dversion=1.1 -Dpackaging=jar
* Use this command to build project: mvn clean install (by default, run unit tests).
* To run integration tests:
  + Default with cargo:
   mvn clean install -Prun-its
   With default parameters:
   social.server.version=1.2.0-GA (latest release with Rest APIs)
   social.server.host = 127.0.0.1,
   social.server.port=8080
   it.cargo.skip=false.

  + With an actual running server: mvn clean install -Prun-its -Dit.cargo.skip=true
    We can define social.server.host and social.server.port other than defaults, for example:
    mvn clean install -Prun-its -Dit.cargo.skip=true -Dsocial.server.host=platform35.demo.exoplatform.org -Dsocial.server.port=80

* Jenkins build: https://ci.exoplatform.org/job/social-client-master-ci/
* Sonar report: https://sonar.exoplatform.org/dashboard/index/81870
* Ohloh report: https://www.ohloh.net/p/exo-social-client/
* Artifact deployment: http://repository.exoplatform.org/content/groups/public/org/exoplatform/social/exo.social.client/

 2. How to use this library

 * Sample code:

    // Context information
    ClientContext.setHost("http://platform35.demo.exoplatform.org");
    ClientContext.setPort(80);
    ClientContext.setPortalContainerName("portal");
    ClientContext.setRestContextName("rest");
    ClientContext.setRestVersion("v1-alpha1");
    ClientContext.setUsername("demo");
    ClientContext.setPassword("gtn");

    ClientServiceFactory clientServiceFactory = ClientServiceFactoryHelper.getClientServiceFactory();

    //it's all for Client to work, now just get the Service to use
    ActivityService activityService = clientServiceFactory.createActivityService();;

    IdentityService identityService = clientServiceFactory.createIdentityService();
    //...

    ActivityService activityService = client.getActivityService();
    Activity activity = (Activity) activityService.get("123456789");